<style>
/* === HEADER === */
.header_top {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 16px 24px;
  background: linear-gradient(to bottom, var(--color-white), var(--color-bg-light));
  border-bottom: 1px solid var(--color-border);
  box-shadow: var(--shadow-sm);
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  position: sticky;
  top: 0;
  z-index: 100;
  backdrop-filter: var(--blur-background);
}

/* === BURGER BUTTON === */
.burger-btn {
  background: none;
  border: none;
  color: var(--color-text-medium);
  font-size: 24px;
  cursor: pointer;
  display: none;
  padding: 8px;
  border-radius: var(--border-radius-sm);
  transition: all 0.2s ease;
}

.burger-btn:hover {
  background-color: var(--color-bg-hover);
  color: var(--color-primary);
}

.burger-btn:active {
  transform: scale(0.95);
}

/* === HEADER RIGHT === */
.header_right {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-left: auto;
}

/* === NOTIFICATION BUTTON === */
.notification-btn {
  background: var(--color-white);
  border: 1px solid var(--color-border);
  font-size: 20px;
  color: var(--color-text-muted);
  position: relative;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  padding: 10px;
  border-radius: var(--border-radius);
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: var(--shadow-sm);
}

.notification-btn:hover {
  background: linear-gradient(135deg, var(--color-primary), #10b981);
  color: var(--color-white);
  border-color: var(--color-primary);
  transform: translateY(-2px);
  box-shadow: var(--shadow-green);
}

.notification-btn.active {
  background: linear-gradient(135deg, var(--color-primary), #10b981);
  color: var(--color-white);
  border-color: var(--color-primary);
  box-shadow: var(--shadow-green);
}

.notification-btn:active {
  transform: translateY(0) scale(0.98);
}

.notification-btn i {
  transition: transform 0.3s ease;
}

.notification-btn:hover i,
.notification-btn.active i {
  transform: rotate(15deg);
}

/* Badge de notification */
.notification-badge {
  position: absolute;
  top: 2px;
  right: 2px;
  min-width: 20px;
  height: 20px;
  background: linear-gradient(135deg, var(--color-danger-start), var(--color-danger-end));
  border-radius: 10px;
  border: 2.5px solid var(--color-white);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 11px;
  font-weight: 700;
  color: white;
  padding: 0 5px;
  box-sizing: border-box;
  animation: pulse 2s ease-in-out infinite;
  box-shadow: 0 2px 8px rgba(239, 68, 68, 0.5);
}

.notification-badge:empty {
  display: none;
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.85;
    transform: scale(1.15);
  }
}

/* === NOTIFICATION PANEL === */
.notification-panel {
  position: absolute;
  top: calc(100% + 16px);
  right: 0;
  width: 440px;
  max-height: 650px;
  background: var(--color-white);
  border-radius: 16px;
  box-shadow: var(--shadow-xl);
  opacity: 0;
  visibility: hidden;
  transform: translateY(-15px) scale(0.95);
  transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);
  z-index: 1000;
  overflow: hidden;
  border: 1px solid var(--color-border);
}

.notification-panel::before {
  content: '';
  position: absolute;
  top: -8px;
  right: 20px;
  width: 16px;
  height: 16px;
  background: var(--color-white);
  border-left: 1px solid var(--color-border);
  border-top: 1px solid var(--color-border);
  transform: rotate(45deg);
}

.notification-panel.show {
  opacity: 1;
  visibility: visible;
  transform: translateY(0) scale(1);
}

/* Header du panel */
.notification-panel-header {
  padding: 20px 24px;
  border-bottom: 1px solid var(--color-border);
  background: linear-gradient(135deg, var(--color-bg-light), var(--color-white));
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: relative;
}

.notification-panel-header::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 24px;
  right: 24px;
  height: 2px;
  background: linear-gradient(90deg, var(--color-primary), transparent);
  opacity: 0.3;
}

.notification-panel-title {
  font-size: 18px;
  font-weight: 700;
  color: var(--color-text-dark);
  display: flex;
  align-items: center;
  gap: 10px;
}

.notification-panel-title i {
  color: var(--color-primary);
  font-size: 20px;
}

.notification-count-badge {
  background: linear-gradient(135deg, var(--color-primary), #10b981);
  color: white;
  font-size: 12px;
  font-weight: 700;
  padding: 4px 10px;
  border-radius: 20px;
  box-shadow: 0 2px 8px var(--color-primary-hover);
  min-width: 24px;
  text-align: center;
}

.mark-all-read {
  background: none;
  border: 1px solid var(--color-border);
  color: var(--color-primary);
  font-size: 13px;
  font-weight: 600;
  cursor: pointer;
  padding: 8px 14px;
  border-radius: var(--border-radius-sm);
  transition: all 0.2s ease;
  display: flex;
  align-items: center;
  gap: 6px;
}

.mark-all-read:hover {
  background: var(--color-primary);
  color: var(--color-white);
  border-color: var(--color-primary);
  box-shadow: var(--shadow-green);
  transform: translateY(-1px);
}

.mark-all-read:active {
  transform: translateY(0);
}

/* Liste des notifications */
.notification-list {
  max-height: 530px;
  overflow-y: auto;
  padding: 12px;
}

.notification-list::-webkit-scrollbar {
  width: 8px;
}

.notification-list::-webkit-scrollbar-track {
  background: var(--color-bg-light);
  border-radius: 10px;
  margin: 8px 0;
}

.notification-list::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, var(--color-primary), #10b981);
  border-radius: 10px;
  border: 2px solid var(--color-bg-light);
}

.notification-list::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(180deg, #047857, var(--color-primary));
}

/* Item de notification */
.notification-item {
  padding: 16px;
  border-radius: var(--border-radius);
  margin-bottom: 10px;
  cursor: pointer;
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  border: 1px solid transparent;
  display: flex;
  gap: 14px;
  position: relative;
  background: var(--color-white);
}

.notification-item:hover {
  background: var(--color-bg-light);
  border-color: var(--color-border);
  transform: translateX(6px);
  box-shadow: var(--shadow-md);
}

.notification-item:active {
  transform: translateX(6px) scale(0.98);
}

.notification-item.unread {
  background: linear-gradient(135deg, var(--color-white), var(--color-bg-light));
  border-color: rgba(5, 150, 105, 0.2);
  box-shadow: 0 0 0 1px rgba(5, 150, 105, 0.1);
}

.notification-item.unread::before {
  content: '';
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  width: 4px;
  height: 65%;
  background: linear-gradient(180deg, var(--color-primary), #10b981);
  border-radius: 0 4px 4px 0;
  box-shadow: 2px 0 6px var(--color-primary-hover);
}

/* Ic√¥ne de notification */
.notification-icon {
  width: 44px;
  height: 44px;
  border-radius: var(--border-radius);
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  flex-shrink: 0;
  position: relative;
  transition: all 0.3s ease;
  box-shadow: var(--shadow-sm);
}

.notification-item:hover .notification-icon {
  transform: scale(1.1) rotate(5deg);
  box-shadow: var(--shadow-md);
}

.notification-icon::after {
  content: '';
  position: absolute;
  inset: -2px;
  border-radius: var(--border-radius);
  padding: 2px;
  background: linear-gradient(135deg, rgba(255,255,255,0.8), rgba(255,255,255,0.2));
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  opacity: 0.5;
}

.notification-icon.info {
  background: linear-gradient(135deg, #059669, #10b981);
  color: white;
}

.notification-icon.success {
  background: linear-gradient(135deg, var(--color-success), #34d399);
  color: white;
}

.notification-icon.warning {
  background: linear-gradient(135deg, var(--color-warning), #fbbf24);
  color: white;
}

.notification-icon.error {
  background: linear-gradient(135deg, var(--color-danger-start), var(--color-danger-end));
  color: white;
}

/* Contenu de la notification */
.notification-content {
  flex: 1;
  min-width: 0;
}

.notification-title {
  font-weight: 700;
  color: var(--color-text-dark);
  font-size: 15px;
  margin-bottom: 6px;
  display: flex;
  align-items: center;
  gap: 8px;
  line-height: 1.4;
}

.notification-message {
  font-size: 14px;
  color: var(--color-text-medium);
  line-height: 1.6;
  margin-bottom: 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

.notification-time {
  font-size: 12px;
  color: var(--color-text-light);
  display: flex;
  align-items: center;
  gap: 5px;
  font-weight: 500;
}

.notification-time i {
  font-size: 11px;
}

/* Priority badge */
.priority-badge {
  font-size: 10px;
  padding: 3px 8px;
  border-radius: 6px;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  box-shadow: var(--shadow-sm);
}

.priority-badge.high {
  background: linear-gradient(135deg, #fee2e2, #fecaca);
  color: var(--color-danger-end);
  border: 1px solid #fca5a5;
}

.priority-badge.medium {
  background: linear-gradient(135deg, #fef3c7, #fde68a);
  color: #92400e;
  border: 1px solid #fcd34d;
}

.priority-badge.low {
  background: linear-gradient(135deg, #dbeafe, #bfdbfe);
  color: #1e40af;
  border: 1px solid #93c5fd;
}

/* Empty state */
.notification-empty {
  padding: 80px 20px;
  text-align: center;
}

.notification-empty-icon {
  font-size: 64px;
  color: var(--color-text-light);
  margin-bottom: 20px;
  opacity: 0.4;
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
}

.notification-empty-text {
  color: var(--color-text-medium);
  font-size: 16px;
  font-weight: 500;
}

/* User profile */
.user-profile {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 6px 12px 6px 6px;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: all 0.2s ease;
  border: 1px solid transparent;
}

.user-profile:hover {
  background-color: var(--color-bg-light);
  border-color: var(--color-border);
}

.avatar-wrapper {
  position: relative;
}

.header_right img {
  width: 40px;
  height: 40px;
  border-radius: 50%;
  object-fit: cover;
  border: 2px solid var(--color-border);
  transition: all 0.3s ease;
  box-shadow: var(--shadow-sm);
}

.user-profile:hover img {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 4px var(--color-primary-hover);
  transform: scale(1.05);
}

.company-name {
  font-weight: 600;
  color: var(--color-text-dark);
  font-size: 15px;
  white-space: nowrap;
  display: flex;
  align-items: center;
  gap: 6px;
}

.company-name::after {
  content: '‚ñæ';
  font-size: 12px;
  color: var(--color-text-light);
  transition: transform 0.2s ease;
}

.user-profile:hover .company-name::after {
  transform: translateY(2px);
  color: var(--color-primary);
}

/* === RESPONSIVE === */
@media (max-width: 768px) {
  .header_top {
    padding: 12px 16px;
  }

  .burger-btn {
    display: flex;
  }

  .header-logo {
    display: none;
  }

  .header-logo .logo-text {
    display: none;
  }

  .company-name {
    display: none;
  }

  .header_right {
    gap: 12px;
  }

  .notification-btn,
  .header_right img {
    width: 40px;
    height: 40px;
  }

  .notification-panel {
    right: -77px;
    width: calc(100vw - 24px);
    max-width: none;
    margin: 0 12px;
  }

  .notification-panel::before {
    right: 50%;
    transform: translateX(50%) rotate(45deg);
  }
}

@media (max-width: 480px) {
  .header_top {
    padding: 10px 12px;
  }

  .header-logo .logo {
    width: 36px;
    height: 36px;
    font-size: 18px;
  }

  .notification-panel {
    width: calc(100vw - 16px);
    margin: 0 8px;
  }

  .notification-list {
    max-height: 400px;
  }
}

/* Animations d'entr√©e */
@keyframes slideInNotification {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.notification-item {
  animation: slideInNotification 0.3s ease-out backwards;
}

.notification-item:nth-child(1) { animation-delay: 0.05s; }
.notification-item:nth-child(2) { animation-delay: 0.1s; }
.notification-item:nth-child(3) { animation-delay: 0.15s; }
.notification-item:nth-child(4) { animation-delay: 0.2s; }
.notification-item:nth-child(5) { animation-delay: 0.25s; }
</style>

<header class="header_top">
  <!-- Bouton burger pour mobile -->
  <button class="burger-btn"
          aria-label="Menu"
          data-action="click->layout#toggleSidebar">
    <i class="fas fa-bars"></i>
  </button>

  <!-- Logo -->
  <div class="header-logo">
    <div class="logo-container">
      <div class="logo">
        <i class="fas fa-shield-halved"></i>
      </div>
      <span class="logo-text">MykeyNest</span>
    </div>
  </div>

  <!-- Partie droite -->
  <div class="header_right">
    {% include 'components/parts/theme_mode_btn.html.twig' %}

    <!-- Notifications -->
    <div style="position: relative;">
      <button class="notification-btn" 
              aria-label="Notifications"
              id="notificationBtn">
        <i class="fas fa-bell"></i>
        <span id="notif" class="notification-badge"></span>
      </button>

      <!-- Panel des notifications -->
      <div class="notification-panel" id="notificationPanel">
        <div class="notification-panel-header">
          <div class="notification-panel-title">
            <i class="fas fa-bell"></i>
            Notifications
            <span class="notification-count-badge" id="notificationCountBadge">0</span>
          </div>
          <button class="mark-all-read" id="markAllReadBtn">
            <i class="fas fa-check-double"></i>
            Marquer lu
          </button>
        </div>
        <div class="notification-list" id="notificationList">
          <div class="notification-empty">
            <div class="notification-empty-icon">
              <i class="fas fa-bell-slash"></i>
            </div>
            <div class="notification-empty-text">Chargement...</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Profil utilisateur -->
    <div class="user-profile">
      <div class="avatar-wrapper">
        <img src="https://i.pravatar.cc/150?img=5" alt="Avatar utilisateur" />
      </div>
      <span class="company-name">{{ app.user.company }}</span>
    </div>
  </div>
</header>

<script>
// √âtat des notifications
let notificationsData = [];

// Ic√¥nes par type
const typeIcons = {
  info: 'fa-info-circle',
  success: 'fa-check-circle',
  warning: 'fa-exclamation-triangle',
  error: 'fa-times-circle'
};

// Charger le count de notifications
async function loadNotificationsCount() {
  const notif = document.getElementById("notif");
  try {
    const response = await fetch("/api/notifications/length");
    if (!response.ok) throw new Error("Erreur r√©seau");
    const data = await response.json();
    
    const displayCount = data.count > 9 ? '9+' : data.count;
    notif.textContent = data.count > 0 ? displayCount : '';
    
    // Mettre √† jour le badge dans le panel
    document.getElementById('notificationCountBadge').textContent = data.count;
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration du count :", error);
  }
}

// Charger les notifications compl√®tes
async function loadNotifications() {
  const container = document.getElementById('notificationList');
  
  // Loading state
  container.innerHTML = `
    <div class="notification-empty">
      <div class="notification-empty-icon">
        <i class="fas fa-circle-notch fa-spin"></i>
      </div>
      <div class="notification-empty-text">Chargement des notifications...</div>
    </div>
  `;
  
  try {
    const response = await fetch("/api/notifications");
    if (!response.ok) throw new Error("Erreur r√©seau");
    const data = await response.json();
    
    notificationsData = data.notifications;
    renderNotifications(notificationsData);
  } catch (error) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration des notifications :", error);
    container.innerHTML = `
      <div class="notification-empty">
        <div class="notification-empty-icon">
          <i class="fas fa-exclamation-triangle"></i>
        </div>
        <div class="notification-empty-text">Erreur de chargement</div>
      </div>
    `;
  }
}

// Rendre les notifications
function renderNotifications(notifications) {
  const container = document.getElementById('notificationList');
  console.log(notifications)
  
  if (notifications.length === 0) {
    container.innerHTML = `
      <div class="notification-empty">
        <div class="notification-empty-icon">
          <i class="fas fa-bell-slash"></i>
        </div>
        <div class="notification-empty-text">Aucune notification pour le moment</div>
      </div>
    `;
    return;
  }
  
  container.innerHTML = notifications.map(notif => `
    <div class="notification-item ${!notif.isRead ? 'unread' : ''}" 
         data-id="${notif.id}"
         onclick="handleNotificationClick('${notif.actionUrl || ''}', ${notif.id})">
      <div class="notification-icon ${notif.type}">
        <i class="fas ${typeIcons[notif.type] || 'fa-bell'}"></i>
      </div>
      <div class="notification-content">
        <div class="notification-title">
          ${escapeHtml(notif.title)}  
          ${notif.priority && notif.priority !== 'low' ? `<span class="priority-badge ${notif.priority}">${notif.priority}</span>` : ''}
          <i class="fas ${notif.icon}"></i>
        </div>
        <div class="notification-message">${escapeHtml(notif.message)}</div>
        <div class="notification-time">
          <i class="fas fa-clock"></i>
          ${notif.timeAgo}
        </div>
      </div>
    </div>
  `).join('');
}

// √âchapper le HTML pour √©viter XSS
function escapeHtml(text) {
  const div = document.createElement('div');
  div.textContent = text;
  return div.innerHTML;
}

// G√©rer le clic sur une notification
function handleNotificationClick(url, notifId) {
  if (url && url !== '' && url !== '/app/dashboard') {
    window.location.href = url;
  }
}

// Toggle du panel
const notificationBtn = document.getElementById('notificationBtn');
const notificationPanel = document.getElementById('notificationPanel');

notificationBtn.addEventListener('click', (e) => {
  e.stopPropagation();
  const isOpen = notificationPanel.classList.contains('show');
  
  if (!isOpen) {
    loadNotifications();
    notificationPanel.classList.add('show');
    notificationBtn.classList.add('active');
  } else {
    notificationPanel.classList.remove('show');
    notificationBtn.classList.remove('active');
  }
});

// Fermer en cliquant ailleurs
document.addEventListener('click', (e) => {
  if (!notificationPanel.contains(e.target) && !notificationBtn.contains(e.target)) {
    notificationPanel.classList.remove('show');
    notificationBtn.classList.remove('active');
  }
});

// Marquer toutes comme lues
document.getElementById('markAllReadBtn').addEventListener('click', async (e) => {
  e.stopPropagation();
  
  const btn = e.currentTarget;
  const originalText = btn.innerHTML;
  btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Marquage...';
  btn.disabled = true;
  
  try {
    await fetch('/api/notifications/mark-all-read', { method: 'POST' });
    await loadNotificationsCount();
    await loadNotifications();
    
    // Animation de succ√®s
    btn.innerHTML = '<i class="fas fa-check"></i> Marqu√© !';
    setTimeout(() => {
      btn.innerHTML = originalText;
      btn.disabled = false;
    }, 1500);
  } catch (error) {
    console.error("‚ùå Erreur:", error);
    btn.innerHTML = '<i class="fas fa-times"></i> Erreur';
    setTimeout(() => {
      btn.innerHTML = originalText;
      btn.disabled = false;
    }, 1500);
  }
});

// Initialisation
loadNotificationsCount();

// Rafra√Æchir le count toutes les 30 secondes
setInterval(loadNotificationsCount, 30000);
</script>