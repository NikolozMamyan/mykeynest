{# templates/credential/index.html.twig #}
{% extends 'base.html.twig' %}
{% block title %}Gestionnaire de mots de passe{% endblock %}
{% block body %}

<style>
  /* Variables already defined in your root */
  
  /* Layout principal */
  .content-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
    animation: fadeIn 0.5s ease;
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Header Section */
  .page-header {
    margin-bottom: 2.5rem;
  }

  .page-title {
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-text-dark);
    margin-bottom: 0.5rem;
  }

  .page-subtitle {
    color: var(--color-text-muted);
    font-size: 0.95rem;
  }

  /* Top Actions Bar */
  .top-actions {
    display: flex;
    gap: 1rem;
    align-items: center;
    margin-bottom: 1.5rem;
    flex-wrap: wrap;
  }

  .search-container {
    position: relative;
    flex: 1;
    min-width: 280px;
    max-width: 500px;
  }

  .search-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--color-text-muted);
    pointer-events: none;
    transition: color 0.3s ease;
  }

  .search-input {
    width: 100%;
    padding: 0.875rem 1rem 0.875rem 2.75rem;
    border: 2px solid var(--color-border);
    border-radius: 12px;
    background: var(--color-white);
    color: var(--color-text-dark);
    font-size: 0.95rem;
    transition: all 0.3s ease;
  }

  .search-input:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: var(--shadow-green);
  }

  .search-input:focus + .search-icon {
    color: var(--color-primary);
  }

  .primary-btn-static {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.5rem;
    background: linear-gradient(135deg, var(--color-primary) 0%, #047857 100%);
    color: var(--color-white);
    border: none;
    border-radius: 12px;
    font-weight: 600;
    font-size: 0.95rem;
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
    box-shadow: var(--shadow-sm);
  }

  .primary-btn-static:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-green);
  }

  .primary-btn-static:active {
    transform: translateY(0);
  }

  /* Filters */
  .filters {
    display: flex;
    gap: 0.75rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }

  .filter-btn {
    padding: 0.625rem 1.25rem;
    background: var(--color-white);
    border: 2px solid var(--color-border);
    border-radius: 10px;
    color: var(--color-text-medium);
    font-size: 0.9rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .filter-btn:hover {
    background: var(--color-bg-hover);
    border-color: var(--color-primary);
    color: var(--color-primary);
  }

  .filter-btn.active {
    background: var(--color-primary);
    border-color: var(--color-primary);
    color: var(--color-white);
    box-shadow: var(--shadow-green);
  }

  /* Password Cards Grid */
  .passwords-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(380px, 1fr));
    gap: 1.5rem;
    animation: slideUp 0.6s ease;
  }

  @keyframes slideUp {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }

  .password-card {
    background: var(--color-white);
    border: 2px solid var(--color-border);
    border-radius: 16px;
    overflow: hidden;
    transition: all 0.3s ease;
    animation: cardAppear 0.5s ease;
  }

  @keyframes cardAppear {
    from { opacity: 0; transform: scale(0.95); }
    to { opacity: 1; transform: scale(1); }
  }

  .password-card:hover {
    border-color: var(--color-primary);
    box-shadow: 0 8px 24px rgba(5, 150, 105, 0.12);
    transform: translateY(-4px);
  }

  .card-body {
    padding: 1.5rem;
  }

  /* Site Info */
  .site-info {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1.25rem;
    padding-bottom: 1.25rem;
    border-bottom: 1px solid var(--color-border);
  }

  .site-icon {
    width: 52px;
    height: 52px;
    border-radius: 12px;
    background: linear-gradient(135deg, var(--color-primary) 0%, #047857 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-white);
    font-size: 1.5rem;
    font-weight: 700;
    flex-shrink: 0;
    box-shadow: var(--shadow-green);
  }

  .site-details {
    flex: 1;
    min-width: 0;
  }

  .site-name {
    font-size: 1.125rem;
    font-weight: 700;
    color: var(--color-text-dark);
    margin: 0 0 0.25rem 0;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .site-url {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  /* Credential Info */
  .credential-info {
    display: flex;
    flex-direction: column;
    gap: 0.875rem;
  }

  .credential-row {
    display: flex;
    align-items: center;
    gap: 0.75rem;
  }

  .credential-label {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--color-text-medium);
    min-width: 100px;
  }

  .credential-value {
    flex: 1;
    font-size: 0.9rem;
    color: var(--color-text-dark);
    padding: 0.5rem 0.75rem;
    background: var(--color-bg-light);
    border-radius: 8px;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .password-value {
    font-family: 'Courier New', monospace;
    letter-spacing: 2px;
  }

  /* Card Actions */
  .card-actions {
    display: flex;
    gap: 0.5rem;
    padding: 1rem 1.5rem;
    background: var(--color-bg-light);
    border-top: 1px solid var(--color-border);
  }

  .action-btn {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem;
    background: var(--color-white);
    border: 2px solid var(--color-border);
    border-radius: 10px;
    color: var(--color-text-medium);
    cursor: pointer;
    transition: all 0.3s ease;
    text-decoration: none;
  }

  .action-btn:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-sm);
  }

  .action-btn i {
    font-size: 1rem;
  }

  .btn-view:hover {
    background: var(--color-primary);
    border-color: var(--color-primary);
    color: var(--color-white);
  }

  .btn-share:hover {
    background: #3b82f6;
    border-color: #3b82f6;
    color: var(--color-white);
  }

  .btn-edit:hover {
    background: #f59e0b;
    border-color: #f59e0b;
    color: var(--color-white);
  }

  .btn-delete:hover {
    background: linear-gradient(135deg, var(--color-danger-start) 0%, var(--color-danger-end) 100%);
    border-color: var(--color-danger-start);
    color: var(--color-white);
  }

  /* Empty State */
  .empty-state {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 4rem 2rem;
    text-align: center;
    animation: fadeIn 0.6s ease;
  }

  .empty-icon {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    background: linear-gradient(135deg, rgba(5, 150, 105, 0.1) 0%, rgba(4, 120, 87, 0.1) 100%);
    display: flex;
    align-items: center;
    justify-content: center;
    margin-bottom: 2rem;
  }

  .empty-icon i {
    font-size: 3.5rem;
    color: var(--color-primary);
  }

  .empty-title {
    font-size: 1.75rem;
    font-weight: 700;
    color: var(--color-text-dark);
    margin: 0 0 1rem 0;
  }

  .empty-text {
    font-size: 1rem;
    color: var(--color-text-muted);
    max-width: 500px;
    margin: 0 0 2rem 0;
    line-height: 1.6;
  }

  /* Stats Bar (Optional) */
  .stats-bar {
    display: flex;
    gap: 1rem;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }

  .stat-card {
    flex: 1;
    min-width: 200px;
    padding: 1.25rem;
    background: var(--color-white);
    border: 2px solid var(--color-border);
    border-radius: 12px;
    transition: all 0.3s ease;
  }

  .stat-card:hover {
    border-color: var(--color-primary);
    box-shadow: var(--shadow-sm);
  }

  .stat-label {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    margin-bottom: 0.5rem;
  }

  .stat-value {
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-primary);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .content-container {
      padding: 1rem;
    }

    .passwords-grid {
      grid-template-columns: 1fr;
    }

    .top-actions {
      flex-direction: column;
      align-items: stretch;
    }

    .search-container {
      max-width: 100%;
    }

    .credential-row {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .credential-label {
      min-width: auto;
    }

    .card-actions {
      flex-wrap: wrap;
    }

    .action-btn {
      min-width: calc(50% - 0.25rem);
    }
  }

  @media (max-width: 480px) {
    .page-title {
      font-size: 1.5rem;
    }

    .site-icon {
      width: 44px;
      height: 44px;
      font-size: 1.25rem;
    }

    .filters {
      gap: 0.5rem;
    }

    .filter-btn {
      padding: 0.5rem 1rem;
      font-size: 0.85rem;
    }
  }

  /* Loading Animation */
  .loading {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid var(--color-border);
    border-radius: 50%;
    border-top-color: var(--color-primary);
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }
</style>


  <!-- Page Header (Optional but recommended) -->
  <div class="page-header">
    <h1 class="page-title">üîê Mes identifiants</h1>
    <p class="page-subtitle">G√©rez vos mots de passe en toute s√©curit√©</p>
  </div>

  <!-- Top Actions -->
  <div class="top-actions">
    <div class="search-container">
      <i class="fas fa-search search-icon"></i>
      <input type="text" class="search-input" placeholder="Rechercher par nom, domaine ou identifiant...">
    </div>
    <a href="{{ path('credential_new') }}" class="primary-btn-static">
      <i class="fas fa-plus"></i>
      <span>Ajouter un identifiant</span>
    </a>
  </div>

  <!-- Filters -->
  <div class="filters">
    <button class="filter-btn active" data-filter="all">
      <i class="fas fa-th"></i> Tous
    </button>
    <button class="filter-btn" data-filter="web">
      <i class="fas fa-globe"></i> Sites web
    </button>
    <button class="filter-btn" data-filter="recent">
      <i class="fas fa-clock"></i> R√©cents
    </button>
  </div>

  <!-- Password Cards Grid -->
  {% if credentials is empty %}
    <div class="empty-state">
      <div class="empty-icon">
        <i class="fas fa-lock"></i>
      </div>
      <h3 class="empty-title">Aucun identifiant enregistr√©</h3>
      <p class="empty-text">Commencez √† s√©curiser vos mots de passe en ajoutant votre premier identifiant. Vos donn√©es seront chiffr√©es et prot√©g√©es.</p>
      <a href="{{ path('credential_new') }}" class="primary-btn-static">
        <i class="fas fa-plus"></i>
        <span>Ajouter mon premier identifiant</span>
      </a>
    </div>
  {% else %}
    <div class="passwords-grid">
      {% for credential in credentials %}
        <div class="password-card" data-type="web">
          <div class="card-body">
            <div class="site-info">
              <div class="site-icon">
                {{ credential.name|first|upper }}
              </div>
              <div class="site-details">
                <h3 class="site-name">{{ credential.name }}</h3>
                <div class="site-url">{{ credential.domain }}</div>
              </div>
            </div>
            <div class="credential-info">
              <div class="credential-row">
                <div class="credential-label">
                  <i class="fas fa-user"></i> Identifiant
                </div>
                <div class="credential-value">{{ credential.username }}</div>
              </div>
              <div class="credential-row">
                <div class="credential-label">
                  <i class="fas fa-key"></i> Mot de passe
                </div>
                <div class="credential-value">
                  <div class="password-value">‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢</div>
                </div>
              </div>
            </div>
          </div>
          <div class="card-actions">
            <a href="{{ path('credential_show', {'id': credential.id}) }}" class="action-btn btn-view" title="Voir les d√©tails">
              <i class="fas fa-eye"></i>
            </a>
            <button class="action-btn btn-share" title="Partager">
              <i class="fas fa-share-alt"></i>
            </button>
            <a href="{{ path('credential_edit', {'id': credential.id}) }}" class="action-btn btn-edit" title="Modifier">
              <i class="fas fa-pencil-alt"></i>
            </a>
            <form method="post" action="{{ path('credential_delete', {'id': credential.id}) }}" onsubmit="return confirm('√ätes-vous s√ªr de vouloir supprimer cet identifiant ?');" style="display: inline;">
              <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ credential.id) }}">
              <button class="action-btn btn-delete" title="Supprimer" type="submit">
                <i class="fas fa-trash"></i>
              </button>
            </form>
          </div>
        </div>
      {% endfor %}
    </div>
  {% endif %}


<script>
  // Recherche am√©lior√©e avec debounce
  let searchTimeout;
  document.querySelector('.search-input').addEventListener('input', function(e) {
    clearTimeout(searchTimeout);
    searchTimeout = setTimeout(() => {
      const searchTerm = e.target.value.toLowerCase().trim();
      const cards = document.querySelectorAll('.password-card');
      let visibleCount = 0;
      
      cards.forEach(card => {
        const siteName = card.querySelector('.site-name').textContent.toLowerCase();
        const siteUrl = card.querySelector('.site-url').textContent.toLowerCase();
        const username = card.querySelector('.credential-value').textContent.toLowerCase();
        
        const isVisible = siteName.includes(searchTerm) || 
                         siteUrl.includes(searchTerm) || 
                         username.includes(searchTerm);
        
        if (isVisible) {
          card.style.display = '';
          visibleCount++;
          // Animation d'apparition
          card.style.animation = 'cardAppear 0.3s ease';
        } else {
          card.style.display = 'none';
        }
      });
      
      // Afficher un message si aucun r√©sultat
      const grid = document.querySelector('.passwords-grid');
      let noResults = document.querySelector('.no-results');
      
      if (visibleCount === 0 && searchTerm !== '') {
        if (!noResults) {
          noResults = document.createElement('div');
          noResults.className = 'empty-state no-results';
          noResults.innerHTML = `
            <div class="empty-icon">
              <i class="fas fa-search"></i>
            </div>
            <h3 class="empty-title">Aucun r√©sultat trouv√©</h3>
            <p class="empty-text">Essayez avec d'autres mots-cl√©s</p>
          `;
          grid.parentNode.insertBefore(noResults, grid.nextSibling);
        }
        grid.style.display = 'none';
      } else {
        if (noResults) {
          noResults.remove();
        }
        grid.style.display = 'grid';
      }
    }, 300);
  });

  // Gestion des filtres
  const filterButtons = document.querySelectorAll('.filter-btn');
  filterButtons.forEach(button => {
    button.addEventListener('click', function() {
      // Retirer la classe active
      filterButtons.forEach(btn => btn.classList.remove('active'));
      this.classList.add('active');
      
      const filter = this.dataset.filter;
      const cards = document.querySelectorAll('.password-card');
      
      cards.forEach(card => {
        if (filter === 'all') {
          card.style.display = '';
        } else if (filter === 'web') {
          // Logique pour filtrer les sites web
          card.style.display = '';
        } else if (filter === 'recent') {
          // Logique pour filtrer les r√©cents (√† impl√©menter c√¥t√© backend)
          card.style.display = '';
        }
      });
    });
  });

  // Animation au chargement de la page
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.password-card');
    cards.forEach((card, index) => {
      card.style.animationDelay = `${index * 0.05}s`;
    });
  });

  // Copie dans le presse-papier (√† ajouter si n√©cessaire)
  function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
      // Afficher une notification de succ√®s
      console.log('Copi√© dans le presse-papier');
    });
  }
</script>
{% endblock %}