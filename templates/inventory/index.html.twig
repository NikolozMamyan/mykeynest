{% extends 'base.html.twig' %}

{% block title %}{{ character.name }}'s Inventory{% endblock %}

{% block body %}
<div class="inventory-container">
    <!-- Bouton de retour en position absolue -->

    
    <h1 class="inventory-title">{{ character.name }}'s Loadout</h1>
    <div class="character-stats">
        <div class="stat-box">
            <span class="stat-icon">‚ù§Ô∏è{{character.hp}}</span>
            <span class="stat-value"></span>
        </div>
        <div class="stat-box">
            <span class="stat-icon">‚öîÔ∏è{{character.defense}}</span>
            <span class="stat-value"></span>
        </div>
        <div class="stat-box">
            <span class="stat-icon">üõ°Ô∏è</span>
            <span class="stat-value">{{ character.defense }}</span>
        </div>
                <div class="stat-box">
            <span class="stat-icon">üèÉ</span>
            <span class="stat-value">{{ character.speed }}</span>
        </div>
                        <div class="stat-box">
            <span class="stat-icon">ü§∏</span>
            <span class="stat-value">{{ character.agility }}</span>
        </div>
        
    </div>
    
    <form method="POST" class="loadout-form">
        <div class="perk-grid">
            {% for perk in inventory.perks %}
                <div class="perk-card {% if perk in character.equippedPerks %}equipped{% endif %}">
                    <input 
                        type="checkbox" 
                        id="perk-{{ perk.id }}" 
                        name="perks[]" 
                        value="{{ perk.id }}" 
                        {% if perk in character.equippedPerks %}checked{% endif %}
                        class="perk-checkbox"
                    >
                    <label for="perk-{{ perk.id }}" class="perk-label">
                        <div class="perk-name">{{ perk.name }}</div>
                        <div class="perk-value">+{{ perk.value }} {{ perk.type }}</div>
                        <div class="perk-status"></div>
                    </label>
                </div>
            {% endfor %}
        </div>
        
        <div class="form-actions">
            <button type="submit" class="pixel-button">
                <span class="button-text">Save Loadout</span>
            </button>
        </div>
    </form>
</div>
        {% include 'components/_menu_button.html.twig' with {
            'route_name': 'app_menu',
            'button_text': 'Back to Menu'
        } %}
<style>
.inventory-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 20px;
    position: relative;
}

.back-button {
    position: absolute;
    top: 20px;
    left: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #1a1a1a;
    border: 2px solid var(--primary-color);
    border-radius: 8px;
    color: var(--primary-color);
    padding: 10px 16px;
    text-decoration: none;
    box-shadow: 0 0 10px rgba(255, 127, 80, 0.5);
    transition: all 0.3s ease;
    font-family: 'Press Start 2P', cursive;
    text-transform: uppercase;
    font-size: 0.7rem;
    letter-spacing: 1px;
    z-index: 1000;
}

.back-button:hover {
    background-color: #2a2a2a;
    transform: translateY(-2px);
    box-shadow: 0 0 15px rgba(255, 127, 80, 0.8);
}

.back-button:active {
    transform: translateY(1px);
}

.back-icon {
    margin-right: 8px;
    font-size: 18px;
}

.inventory-title {
    font-family: 'Press Start 2P', cursive;
    text-align: center;
    margin: 50px 0 30px;
    font-size: 1.8rem;
    color: var(--primary-color);
    text-shadow: 3px 3px 0 #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;
    letter-spacing: 2px;
}

.character-stats {
    display: flex;
    justify-content: center;
    gap: 30px;
    margin-bottom: 40px;
}

.stat-box {
    background-color: #1a1a1a;
    border: 3px solid var(--primary-color);
    padding: 10px 20px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    box-shadow: 0 0 10px rgba(255, 127, 80, 0.3);
}

.stat-icon {
    font-size: 24px;
    margin-right: 10px;
}

.stat-value {
    font-size: 28px;
    font-weight: bold;
    color: #fff;
    text-shadow: 1px 1px 0 #000;
}

.perk-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
    gap: 20px;
    margin-bottom: 30px;
}

.perk-card {
    position: relative;
    background-color: #1e1e1e;
    border: 3px solid var(--primary-color);
    padding: 16px;
    text-align: center;
    box-shadow: 0 0 6px var(--primary-color);
    border-radius: 8px;
    transition: all 0.3s ease;
    cursor: pointer;
    overflow: hidden;
}

.perk-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px var(--primary-color);
}

.perk-card.equipped {
    border-color: var(--health-color);
    box-shadow: 0 0 12px var(--health-color);
}

.perk-checkbox {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.perk-label {
    display: block;
    cursor: pointer;
    padding: 10px 0;
}

.perk-name {
    font-family: 'Press Start 2P', cursive;
    font-size: 0.9rem;
    margin-bottom: 15px;
    color: #fff;
    text-shadow: 1px 1px 0 #000;
}

.perk-value {
    font-size: 1.2rem;
    color: var(--primary-color);
    font-weight: bold;
}

.perk-status {
    position: absolute;
    top: 10px;
    right: 10px;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background-color: transparent;
    border: 2px solid #555;
}

.equipped .perk-status {
    background-color: var(--health-color);
    border-color: #fff;
    box-shadow: 0 0 5px var(--health-color);
}

.form-actions {
    display: flex;
    justify-content: center;
    margin-top: 30px;
}

.pixel-button {
    font-family: 'Press Start 2P', cursive;
    background-color: var(--primary-color);
    color: #000;
    border: none;
    padding: 12px 24px;
    font-size: 1rem;
    position: relative;
    cursor: pointer;
    transition: all 0.2s;
    box-shadow: 0px 5px 0px #d3683e, 0px 10px 10px rgba(0, 0, 0, 0.3);
    border-radius: 4px;
    text-transform: uppercase;
}

.pixel-button:hover {
    transform: translateY(2px);
    box-shadow: 0px 3px 0px #d3683e, 0px 6px 5px rgba(0, 0, 0, 0.3);
}

.pixel-button:active {
    transform: translateY(5px);
    box-shadow: 0px 0px 0px #d3683e, 0px 0px 0px rgba(0, 0, 0, 0.3);
}

/* Animation pour les perks quand on les s√©lectionne */
@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

.perk-checkbox:checked + .perk-label .perk-name {
    color: var(--health-color);
}

.perk-card:has(.perk-checkbox:checked) {
    animation: pulse 0.5s;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Animation et effets pour les cartes de perks
    const perkCards = document.querySelectorAll('.perk-card');
    
    perkCards.forEach(card => {
        const checkbox = card.querySelector('.perk-checkbox');
        
        checkbox.addEventListener('change', function() {
            if (this.checked) {
                card.classList.add('equipped');
            } else {
                card.classList.remove('equipped');
            }
        });
    });
});
</script>
{% endblock %}